<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
		    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd">

    <!--<bean id="dataSourceAspect" class="com.dianwoba.common.datasource.DataSourceAspect"/>-->

    <!--<aop:config>-->
    <!--<aop:advisor advice-ref="dataSourceAspect" order="200"-->
    <!--pointcut="(execution(* com.dianwoba.mall.gw.returngoods.manager.*.*(..)) )"/>-->
    <!--</aop:config>-->

    <context:component-scan base-package="com.isen.util.route.datasource"/>

    <context:property-placeholder location="config/jdbc.properties"/>

    <!-- masterDataSource -->
    <bean id="masterDataSource" class="org.apache.commons.dbcp2.BasicDataSource"
            destroy-method="close">
        <property name="driverClassName" value="${jdbc.master.driver}"/>
        <property name="url" value="${jdbc.master.url}"/>
        <property name="username" value="${jdbc.master.username}"/>
        <property name="password" value="${jdbc.master.password}"/>
        <property name="maxTotal" value="30"/>
        <property name="maxIdle" value="10"/>
        <property name="minIdle" value="5"/>
    </bean>

    <!-- salveDataSource -->
    <bean id="salveDataSource" class="org.apache.commons.dbcp2.BasicDataSource"
            destroy-method="close">
        <property name="driverClassName" value="${jdbc.slave.driver}"/>
        <property name="url" value="${jdbc.slave.url}"/>
        <property name="username" value="${jdbc.slave.username}"/>
        <property name="password" value="${jdbc.slave.password}"/>
        <property name="maxTotal" value="30"/>
        <property name="maxIdle" value="10"/>
        <property name="minIdle" value="5"/>
    </bean>

    <!-- routingDataSource -->
    <bean id="routingDataSource"
            class="com.isen.util.route.datasource.datasource.RoutingDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <!-- key要和RoutingDataSource中的key一致 -->
                <entry key="master" value-ref="masterDataSource"/>
                <entry key="slave" value-ref="salveDataSource"/>
            </map>
        </property>
        <!-- 设置默认的数据源 -->
        <property name="defaultTargetDataSource" ref="masterDataSource"/>
    </bean>

    <!-- 定义事务管理器 -->
    <bean id="txManager"
            class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="routingDataSource"/>
    </bean>

    <!-- 定义事务策略 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!--定义查询方法都是只读的 -->
            <tx:method name="query*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>

            <!-- 主库执行操作，事务传播行为定义为默认行为 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>

            <!--其他方法使用默认事务策略 -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 定义切面 -->
    <bean id="dataSourceAspect" class="com.isen.util.route.datasource.datasource.DataSourceAspect"/>

    <aop:config>
        <aop:pointcut id="txPointcut" expression="execution(* *com.isen.util.route.datasource.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>

        <!-- -9999保证该切面优先级最高执行-->
        <aop:aspect ref="dataSourceAspect" order="-9999">
            <aop:before method="before" pointcut-ref="txPointcut"/>
        </aop:aspect>
    </aop:config>


    <!-- spring和MyBatis完美整合 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="routingDataSource"/>
        <!-- 自动扫描mapping.xml文件，**表示迭代查找 -->
        <property name="mapperLocations" value="mapper/**"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.isen.util.route.datasource.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
</beans>